<<<<<<< HEAD
﻿using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;

namespace Chat.Model
{
    public delegate void UserLocalOnBuddyAdd(UserLocal userLocal, UserRemote userRemote);

    public delegate void UserLocalOnBuddyRemove(UserLocal userLocal, UserRemote userRemote);

    public class UserLocal : User
    {
        private List<UserRemote> _buddies;

        public ReadOnlyCollection<UserRemote> Buddies
        {
            private set;
            get;
        }

        public UserLocalOnBuddyAdd BuddyAdd;
        public UserLocalOnBuddyRemove BuddyRemove;

        public UserLocal() 
            :base() 
        { 
            _buddies = new List<UserRemote>();
            Buddies = _buddies.AsReadOnly();
        }

        public void AddBuddy(UserRemote buddy)
        {
            _buddies.Add(buddy);
            if (BuddyAdd != null)
            {
                BuddyAdd(this, buddy);
            }
        }

        public void RemoveBuddy(UserRemote buddy)
        {
            _buddies.Remove(buddy);
            foreach (Conversation conv in Conversations)
            {
                if (conv.Buddies.Contains(buddy))
                {
                    conv.RemoveBuddy(buddy);
                }
            }
            if (BuddyRemove != null)
            {
                BuddyRemove(this, buddy);
            }
        }
    }
}
=======
﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Chat.Model
{
    /// \todo implement OnBuddyAdd
    public delegate void OnBuddyAdd(UserLocal userLocal, UserRemote userRemote);

    /// \todo implement OnBuddyRemove
    public delegate void OnBuddyRemove(UserLocal userLocal, UserRemote userRemote);

    public class UserLocal : User
    {
        private String PasswordSaltedHash;

        public List<UserRemote> Buddies;

        public OnBuddyAdd BuddyAdd;
        public OnBuddyRemove BuddyRemove;

        public void AddBuddy(User buddy)
        {
            /// \todo implement UserLocal.AddBuddy
        }

        public void RemoveBuddy(User buddy)
        {
            /// \todo implement UserLocal.RemoveBuddy
        }

        public Boolean VerifyPassword(String Password)
        {
            /// \todo implement UserLocal.VerifyPassword
            return false;
        }

        public Boolean SetPassword(String oldPassword, String newPassword)
        {
            /// \todo implement UserLocal.SetPassword
            return false;
        }
         
    }
}
>>>>>>> 921c0cf6a7363365f9784557aca57616b2a7bde0
